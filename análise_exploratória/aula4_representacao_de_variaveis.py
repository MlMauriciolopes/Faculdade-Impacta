# -*- coding: utf-8 -*-
"""aula4_representacao_de variaveis.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ewQ8qpTmYgMJTV3gvMQu_LFTuaoX4rIM
"""

import pandas as pd

# caminho no seu google Drive
caminho = '/content/drive/MyDrive/DNAC2017.csv'
sinasc = pd.read_csv(caminho, dtype=str)
sinasc.IDADEMAE = pd.to_numeric(sinasc.IDADEMAE)
sinasc.head()

intervalos = pd.cut(sinasc['IDADEMAE'],[0,9,14,19,24,29,34,39,44,49,54,59])
intervalos

faixa_etaria = sinasc.IDADEMAE.groupby(intervalos)
faixa_etaria

# frequência absoluta
freq_abs = faixa_etaria.agg(['count'])
freq_abs

# frequência relativa
# x: vetor com elementos do grupo de faixa etária
freq_rel_fn = lambda x: round(x.count()/sinasc.IDADEMAE.count(),4)

freq_rel = faixa_etaria.agg([freq_rel_fn])
freq_rel

# frequência percentual

# freq_perc_fn = lambda x: f'{round(x.count()/sinasc.IDADEMAE.count(),4)*100}%' # mudar essa linha
freq_perc_fn = lambda x: f'{round(x.count()*100/sinasc.IDADEMAE.count(),2)}%' # mudar essa linha


freq_perc = faixa_etaria.agg([freq_perc_fn])
freq_perc

# frequência acumulativa
freq_acc = faixa_etaria.count().cumsum().to_frame()
freq_acc

# freqência acumulada relativa
freq_acc_rel = freq_acc/sinasc.IDADEMAE.count()
freq_acc_rel

# frequência acumulada percentual
freq_acc_perc = round(freq_acc*100/sinasc.IDADEMAE.count(),2)
freq_acc_perc

escolaridade = sinasc.ESCMAE.groupby(sinasc.ESCMAE)
escolaridade

freq_acc = escolaridade.count().cumsum().to_frame()
freq_acc

"""# Gráficos"""

# filtro das mães viúvas
sinasc.QTDFILVIVO = pd.to_numeric(sinasc.QTDFILVIVO).astype(pd.Int64Dtype())
viuvas_filhosvivos = sinasc[sinasc.ESTCIVMAE == '3']['QTDFILVIVO']
barras = viuvas_filhosvivos.plot(kind = 'bar', width = 0.9, figsize = (15,5))
barras.set(xlabel = 'Mães', ylabel = 'Qtd filhos vivos')
barras.legend(['Qtd filhos vivos'])

# Escolaridade mãe
grupo = sinasc.ESCMAE.groupby(sinasc.ESCMAE).count()
grupo.plot(kind = 'bar')

# Semana gestação
grupo = sinasc.SEMAGESTAC.groupby(sinasc.SEMAGESTAC).count()
grupo.plot(kind = 'bar')

grupo = sinasc.GESTACAO.groupby(sinasc.GESTACAO).count()
grupo.plot(kind = 'bar')

# Comparar duas variáveis # 1
sinasc.APGAR1 = pd.to_numeric(sinasc.APGAR1)
sinasc.APGAR5 = pd.to_numeric(sinasc.APGAR5)

gestacao_apgar = sinasc[sinasc.GESTACAO == '1'][['APGAR1','APGAR5']]
gestacao_apgar.plot(kind = 'bar', width = 0.7, figsize =(15,6))

# Comparar duas variáveis # 2
sinasc.APGAR1 = pd.to_numeric(sinasc.APGAR1)
sinasc.APGAR5 = pd.to_numeric(sinasc.APGAR5)

gestacao_apgar = sinasc[sinasc.GESTACAO == '2'][['APGAR1','APGAR5']]
gestacao_apgar.plot(kind = 'bar', width = 0.7, figsize =(15,6))

grupo = sinasc.groupby('ESCMAE').count()
grupo[['contador']].plot(y = 'contador', kind = 'pie', figsize =(8,8), autopct = '%1.1f%%')

# Histograma
freq_abs.plot(kind='bar')

# boxplot
sinasc.boxplot(column=['IDADEMAE'], figsize=(15,6))

# boxplot
sinasc['PESO'] = pd.to_numeric(sinasc['PESO'])
sinasc.boxplot(column=['PESO'], figsize=(15,6))

# boxplot
sinasc['QTDFILMORT'] = pd.to_numeric(sinasc['QTDFILMORT'])
sinasc.boxplot(column=['QTDFILMORT'], figsize=(15,6))